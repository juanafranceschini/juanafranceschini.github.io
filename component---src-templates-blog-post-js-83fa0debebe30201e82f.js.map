{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","frontmatter","className","thumbnail","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","gatsby__WEBPACK_IMPORTED_MODULE_1__","Layout","_React$useState","useState","toggleNav","setToggleNav","href","onClick","aria-label","role","aria-controls","to","id","Date","getFullYear","target","rel","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps"],"mappings":"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","file":"component---src-templates-blog-post-js-83fa0debebe30201e82f.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n        />\n        <article\n          className={`post-content ${post.frontmatter.thumbnail || `no-image`}`}\n        >\n          <header className=\"post-content-header\">\n            <h1 className=\"post-content-title\">{post.frontmatter.title}</h1>\n          </header>\n\n          <div\n            className=\"post-content-body\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <footer className=\"post-content-footer\">\n            {/* There are two options for how we display the byline/author-info.\n        If the post has more than one author, we load a specific template\n        from includes/byline-multiple.hbs, otherwise, we just use the\n        default byline. */}\n          </footer>\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1360) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Layout = props => {\n  const { title, children } = props;\n  const [toggleNav, setToggleNav] = React.useState(false);\n  return (\n    <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n      <header className=\"site-head\">\n        <div className=\"site-head-container\">\n          <a\n            className=\"nav-burger\"\n            href={`#`}\n            onClick={() => setToggleNav(!toggleNav)}\n          >\n            <div\n              className=\"hamburger hamburger--collapse\"\n              aria-label=\"Menu\"\n              role=\"button\"\n              aria-controls=\"navigation\"\n            >\n              <div className=\"hamburger-box\">\n                <div className=\"hamburger-inner\" />\n              </div>\n            </div>\n          </a>\n          <div className=\"site-head-left\">\n            <Link className=\"site-head-logo nav-current\" to={`/`}>\n              {title}\n            </Link>\n          </div>\n          <div className=\"site-head-center\"></div>\n          <nav id=\"swup\" className=\"site-head-right\">\n            <ul className=\"nav\" role=\"menu\">\n              <li className=\"nav-home\" role=\"menuitem\">\n                <Link to={`/`}>Home</Link>\n              </li>\n              <li className=\"nav-about\" role=\"menuitem\">\n                <Link to={`/about`}>About</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\">\n        <div id=\"swup\" className=\"transition-fade\">\n          {children}\n        </div>\n      </main>\n      <footer className=\"site-foot\">\n        &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link> &mdash;\n        Built with{\" \"}\n        <a\n          href=\"https://gatsbyjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Gatsby\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}