{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","location","frontmatter","className","thumbnail","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery"],"mappings":"iMAMMA,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAEpD,OACE,kBAAC,IAAD,CAAQC,SAAUR,KAAKC,MAAMO,SAAUD,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAOR,EAAKU,YAAYF,QAC7B,6BACEG,UAAS,iBAAkBX,EAAKU,YAAYE,WAAjB,YAAlB,yBAOT,yBACED,UAAU,oBACVE,wBAAyB,CAAEC,OAAQd,EAAKe,QAG1C,4BAAQJ,UAAU,2B,GArBGK,IAAMC,WAiCtBnB,YAER,IAAMoB,EAAS","file":"component---src-templates-blog-post-js-bd41fd99c7b7fe099c90.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} />\n        <article\n          className={`post-content ${post.frontmatter.thumbnail ||\n            `no-image`} top-padding-disabled`}\n        >\n          {/* <header className=\"post-content-header\">\n            <h1 className=\"post-content-title\">{post.frontmatter.title}</h1>\n          </header> */}\n\n          <div\n            className=\"post-content-body\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <footer className=\"post-content-footer\">\n            {/* There are two options for how we display the byline/author-info.\n        If the post has more than one author, we load a specific template\n        from includes/byline-multiple.hbs, otherwise, we just use the\n        default byline. */}\n          </footer>\n        </article>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1360) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}